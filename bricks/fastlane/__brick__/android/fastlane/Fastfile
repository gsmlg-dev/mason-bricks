import "../../scripts/Fastfile"

default_platform(:android)

platform :android do
  private_lane :build_apk do
    # Reuse parent fastfile tasks
    fetch_dependencies
    # build_autogenerated_code

    sh_on_root(command: "flutter build apk --build-number #{ENV["CI_BUILD_NUMBER"]} --release")
  end

  lane :build do
    # Reuse parent fastfile tasks
    fetch_dependencies
    # build_autogenerated_code

    sh_on_root(command: "flutter build appbundle --build-number #{ENV["CI_BUILD_NUMBER"]} --no-pub --release")
  end

  desc "Build debug and test APK for screenshots"
  lane :build_for_screengrab do
    gradle(
      task: 'clean'
    )
    build_android_app(
      task: 'assemble',
      build_type: 'Debug'
    )
    build_android_app(
      task: 'assemble',
      build_type: 'AndroidTest'
    )
  end

  lane :screenshots do
    capture_android_screenshots
    upload_to_play_store
  end

  lane :deploy_staging do
    build

    # Reuse parent fastfile tasks
    # test

    supply(
      track: 'internal',
      aab: "../build/app/outputs/bundle/release/app-release.aab",
      json_key_data: ENV['PLAY_CONSOLE_SA'],
      skip_upload_apk: true, # Upload the aab instead of apk
      skip_upload_metadata: true,
      skip_upload_changelogs: true,
      skip_upload_images: true,
      skip_upload_screenshots: true
    )
  end

  lane :deploy_production do
    build

    # Reuse parent fastfile tasks
    # test

    supply(
      track: 'beta',
      aab: "../build/app/outputs/bundle/release/app-release.aab",
      json_key_data: ENV['PLAY_CONSOLE_SA'],
      skip_upload_apk: true, # Upload the aab instead of apk
      skip_upload_metadata: true,
      skip_upload_changelogs: true,
      skip_upload_images: true,
      skip_upload_screenshots: true
    )
  end
end
